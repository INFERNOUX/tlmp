package TLMP.NetworkMessages;

message Position {
  required float x = 1;
  required float y = 2;
  required float z = 3;
}

message Character {
  required int64     guid = 1;
  required string    name = 2;
  repeated Character minion  = 3;
  repeated Position  position = 4;
  optional int32     id = 5;
}

// This handles both Affixes and Regular Types
// (C++ Types: EffectType and EnchantType)
message EnchantType {
  required int32     type = 1;
  required int32     subtype = 2;
  required float     value = 3;
}

message Equipment {
  required int64     guid = 1;
  optional int32     slot = 2;
  required int32     id = 3;
  required int32     stacksize = 4;
  required int32     stacksizemax = 5;
  required int32     socketcount = 6;
  repeated Equipment gems = 7;
  repeated EnchantType enchants = 8;
}


message Version {
  required int32 version = 1;
}

message GameHasStarted {
  required bool started = 1;
}

message GameStarted {
}

message GameEnded {
}

message GameEnter {
}

message GameExited {
}

message RequestCharacterInfo {
}

message ReplyCharacterInfo {
  repeated Character player = 1;
}

message ReplyCharacterId {
  required int32 id = 1;
}

message CharacterDestination {
  required int32    id = 1;
  repeated Position current = 2;
  repeated Position destination = 3;
}

message InventoryAddEquipment {
  required int32    ownerId = 1;
  required int32    equipmentId = 2;
  required int32    slot = 3;
  required int32    unk0 = 4;
  optional int64    guid = 5;
}

message InventoryRemoveEquipment {
  required int32    ownerId = 1;
  required int32    equipmentId = 2;
}

message EquipmentDrop {
  required int32    equipmentId = 1;
  repeated Position position = 2;
  required int32    unk0 = 3;
}




message Entity {
  required int32 id = 1;
  required int32 level = 2;
  required int64 guid = 3;
  required bool noItems = 4;
  optional Position destination = 5;
  repeated Position position = 6;
}

message Item {
  required int32 id = 1;
  required int64 guid = 2;
  required int32 level = 3;
  required int32 unk0 = 4;
  required int32 unk1 = 5;
}

message ItemDrop {
  required int32 id = 1;
  repeated Position position = 2;
  required bool unk0 = 3;
}

message ItemPickup {
  required int32 id = 1;
  required int32 ownerId = 2;
}

message ItemEquip {
  required int32 id = 1;
  required int32 slot = 2;
  required int32 ownerId = 3;
  required int32 unk = 4;
}

message ItemUnequip {
  required int32 id = 1;
  required int32 ownerid = 2;
}

