package TLMP.NetworkMessages;

message Position {
  required float x = 1;
  required float y = 2;
  required float z = 3;
}

message Character {
  required int64     guid = 1;
  required string    name = 2;
  repeated Character minion  = 3;
  required Position  position = 4;
  optional int32     id = 5;
  required int32     health = 6;
  required int32     mana = 7;
  required int32     level = 8;
  required int32     strength = 9;
  required int32     dexterity = 10;
  required int32     magic = 11;
  required int32     defense = 12;
  repeated string    skills = 13;
}

// This handles both Affixes and Regular Types
// (C++ Types: EffectType and EnchantType)
message EnchantType {
  required int32     type = 1;
  required int32     subtype = 2;
  required float     value = 3;
}

message Equipment {
  required int64       guid = 1;
  optional int32       slot = 2;
  required int32       id = 3;
  required int32       stacksize = 4;
  required int32       stacksizemax = 5;
  required int32       socketcount = 6;
  repeated Equipment   gems = 7;
  repeated EnchantType enchants = 8;
  optional int32       client_id = 9;
  
  required int32       physical_damage_min = 10;
  required int32       physical_damage_max = 11;
  optional string      name_unidentified = 12;
  optional string      name_prefix = 13;
  optional string      name_suffix = 14;
  required int32       req_level = 15;
  required int32       req_strength = 16;
  required int32       req_dexterity = 17;
  required int32       req_magic = 18;
  required int32       req_defense = 19;
  
  // TODO: AttackDescriptors?
}

message EquipmentSetID {
  required int64     guid = 1;
  required int32     client_id = 2;
  required int32     id = 3;
}

message Version {
  required int32 version = 1;
}

message GameHasStarted {
  required bool started = 1;
}

message GameStarted {
}

message GameEnded {
}

message GameEnter {
}

message GameExited {
}

message RequestCharacterInfo {
}

message ReplyCharacterInfo {
  required Character player = 1;
}

message ReplyCharacterId {
  required int32 id = 1;
  required int64 guid = 2;
}

message CharacterDestination {
  required int32    id = 1;
  repeated Position current = 2;
  repeated Position destination = 3;
  required bool     running = 4;
  required bool     attacking = 5;
}

message InventoryAddEquipment {
  required int32    ownerId = 1;
  required int32    equipmentId = 2;
  required int32    slot = 3;
  required int32    unk0 = 4;
  optional int64    guid = 5;
}

message InventoryRemoveEquipment {
  required int32    ownerId = 1;
  required int32    equipmentId = 2;
}

message EquipmentUpdateStackSize {
  required int32    id = 1;
  required int32    change_amount = 2;
}

message EquipmentDrop {
  required int32    equipmentId = 1;
  repeated Position position = 2;
  required int32    unk0 = 3;
}

message EquipmentPickup {
  required int32    characterId = 1;
  required int32    equipmentId = 2;
}

message CharacterAction {
  required int32    characterId = 1;
  required int32    action = 2;
}

message CharacterAttack {
  required int32    characterId = 1;
}

message CharacterUseSkill {
  required int32    characterId = 1;
  required int64    skill = 2;
  required Position direction = 3;
}

message EquipmentAddGem {
  required int32    equipmentId = 1;
  required int32    gemId = 2;
}

message EquipmentRemoveGems {
  required int32    equipmentId = 1;
}

message ChatServerMessage_PlayerJoin {
  required int32    characterId = 1;
}

message ChatPlayerText {
  required int32    characterId = 1;
  required string   text = 2;
}

message ChangeLevel {
  required string   dungeon = 1;
  required int32    level = 2;
  required int32    unk0 = 3;
  required int32    unk1 = 4;
  required string   unkString = 5;
  required int32    unk2 = 6;
}
